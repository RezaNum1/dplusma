// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Pendonor {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  fullName String  @db.VarChar(50)
  phoneNumber String  @db.VarChar(25)
  email   String  @db.VarChar(62)
  password  String  @db.VarChar(20)
  occupation  String  @db.VarChar(100)
  pendonorDetail  PendonorDetail?
  activity  Activity[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PendonorDetail {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  pendonor    Pendonor    @relation(fields: [pendonorId], references: [id])
  pendonorId  String
  nik String?  @db.VarChar(25)
  sex String?  @db.VarChar(15)
  bloodType String?  @db.VarChar(4)
  placeOfBirth  String?  @db.VarChar(35)
  dateOfBirth DateTime?
  donorCount  Int?
  domisiliProvinsi  String?  @db.VarChar(35)
  domisiliKotKab  String? @db.VarChar(35)
  domisiliKecamatan String? @db.VarChar(35)
  domisiliKelurahan String?  @db.VarChar(35)
  domisiliAddress String?  @db.VarChar(100)
  riwayatHamil  Boolean?
  riwayatCovid  Boolean?
  riwayatTransfusi  Boolean?
  riwayatKeluhan  String?  @db.VarChar(255)
  riwayatKomorbid String?  @db.VarChar(255)
  riwayatDonor  String?  @db.VarChar(255)
  riwayatVaksin String?  @db.VarChar(255)
  riwayatGejalaKlinis String?  @db.VarChar(255)
  hospitalName  String?  @db.VarChar(50)
  pcrPositiveDate DateTime?
  pcrPositiveImg  String?  @db.VarChar(255)
  pcrNegativeDate DateTime?
  pcrNegativeImg  String?  @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Activity {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  branch  Pmi @relation(fields: [branchId], references: [id])
  branchId  String
  pendonor  Pendonor  @relation(fields: [pendonorId], references: [id])
  pendonorId String
  donorType String?  @db.VarChar(35)
  interviewNotes  String?  @db.VarChar(255)
  antibodyLevel  String?  @db.VarChar(100)
  passForm  Boolean?  @default(false)
  didSchedule Boolean? @default(false)
  didInterview  Boolean? @default(false)
  passInterview Boolean? @default(false)
  didBloodTest  Boolean? @default(false)
  passBloodTest Boolean? @default(false)
  didScheduleTest Boolean? @default(false)
  didDonor  Boolean? @default(false)
  processState  Boolean? @default(false)
  proofImg  String?  @db.VarChar(255)
  passFormAt  DateTime?
  didScheduleAt DateTime?
  didInterviewAt  DateTime?
  passInterviewAt DateTime?
  didBloodTestAt  DateTime?
  passBloodTestAt DateTime?
  didScheduleTestAt  DateTime?
  didDonorAt  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Pmi {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  branchName  String  @db.VarChar(100)
  branchSize  String  @db.VarChar(20)
  branchAddress String  @db.VarChar(255)
  phoneNumber String  @db.VarChar(25)
  availability String @db.VarChar(50)
  langitude String  @db.VarChar(100)
  longitude String  @db.VarChar(100)
  activitys Activity[]
  timeslots Timeslot[]
  adminPmi  AdminPmi[]
  createdAt DateTime  @default(now())
}

model Timeslot {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  branch  Pmi @relation(fields: [branchId], references: [id])
  branchId  String
  type  String  @db.VarChar(20)
  timeSlot  String  @db.VarChar(50)
  totalSlot Int
  createdAt DateTime  @default(now())
}

model AdminPmi {
  id  String @id @default(dbgenerated("(gen_random_uuid())::TEXT"))
  branch  Pmi @relation(fields: [branchId], references: [id])
  branchId  String
  fullname  String  @db.VarChar(50)
  email String  @db.VarChar(65)
  password  String  @db.VarChar(25)
  role  String  @db.VarChar(30)
  status  Boolean @default(true)
  createdAt DateTime  @default(now())
}